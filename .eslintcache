[{"/Users/lenakinney/moviesdb/session11movies/src/reportWebVitals.js":"1","/Users/lenakinney/moviesdb/session11movies/src/App.js":"2"},{"size":362,"mtime":1606768688033,"results":"3","hashOfConfig":"4"},{"size":1535,"mtime":1606773036044,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1stmrxf",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"/Users/lenakinney/moviesdb/session11movies/src/reportWebVitals.js",[],"/Users/lenakinney/moviesdb/session11movies/src/App.js",["11"],"import React from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movies: []\n    }\n  }\n\n  componentDidMount() {\n    this.loadMovies();\n  }\n\n  loadMovies() {\n    // go grab (aka get) all the data from some url\n    const url = \"https://api.themoviedb.org/3/discover/movie?api_key=b6fbc7f3f313bd395902af464ef47262&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1\";\n    axios.get(url)\n      .then(response =>\n      {\n        // then put just the movies (not everything) into the state\n        this.setState({movies: response.data.results});\n        console.log (this.state.movies)\n      });\n      \n  }\n\n  render() {\n    // let movies = [];\n    // for(let i = 0; i < this.state.movies.length; i++)\n    // {\n    //   movies.push(<h2>{this.state.movies[i].title}</h2>)\n    // }\n\n    return (\n      <div className=\"App\">\n        <h1>Check out these movies!!!!!!</h1>\n        <div className=\"movies\">\n        {this.state.movies.map(movie =>\n          {\n            return(\n              <div className=\"movie\"> \n             <h2>{movie.title}</h2>\n             <h4>({movie.release_date})</h4>\n            <a href={\"https://www.themoviedb.org/movie/\" + movie.id} >\n            <img src={\"https://image.tmdb.org/t/p/w92\" + movie.poster_path} />\n            </a>\n            </div>\n          );\n          })}\n            </div>\n            </div>\n        );\n      }\n    }\n    \n\nexport default App;\n",{"ruleId":"12","severity":1,"message":"13","line":49,"column":13,"nodeType":"14","endLine":49,"endColumn":79},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]